jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        ProgressTesting\UserBundle\Entity\User:
            algorithm:        sha1
            encode_as_base64: false
            iterations:       1

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        administrators:
            entity: { class: ProgressTestingUserBundle:User }

    firewalls:
        login_firewall:
            pattern:    ^/admin/login$
            anonymous:  ~
        admin_area:
            pattern:    ^/admin
            #anonymous: ~
            # login_path and check_path must be a subdirectory of pattern
            form_login:
                login_path:  /admin/login
                check_path:  /admin/login_check
            logout:
                path:   /admin/logout
                target: /admin/login
                #invalidate_session: false
                #delete_cookies:
                #    a: { path: null, domain: null }
                #    b: { path: null, domain: null }
                #handlers: [some.service.id, another.service.id]
                #success_handler: some.service.id
            anonymous: ~

            #http_basic: ~
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #
        # You must uncomment the two following rules to restrict access to paths
        # starting with the /_internal prefix to only localhost
        #- { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
        #- { path: ^/_internal/secure, roles: ROLE_NO_ACCESS }
